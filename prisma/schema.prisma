// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Group {
  id         Int      @id @default(autoincrement())
  numMember  Int?     
  password   String?  @db.VarChar(20)
  createAt   DateTime @db.DateTime(6)
  updateAt   DateTime @db.DateTime(6)
  groupName  String   @unique @db.VarChar(20)
  users      User[]

  @@map("group")
}

model Mission {
  id             Int           @id @default(autoincrement())
  missionName    String?       @db.VarChar(20)
  missionContent String?       @db.VarChar(50)
  userMissions   UserMission[]

  @@map("mission")
}

model Character {
  id    Int     @id @default(autoincrement())
  photo String? @db.VarChar(255)
  users User[]

  @@map("character")
}

model User {
  id          Int           @id @default(autoincrement())
  group       Group?        @relation(fields: [groupId], references: [id])
  groupId     Int?
  name        String?       @db.VarChar(20)
  createAt    DateTime      @db.DateTime(6)
  updateAt    DateTime      @db.DateTime(6)
  character   Character?    @relation(fields: [characterId], references: [id])
  characterId Int?
  
  // Relation for mission user and target user
  missionPerformed UserMission[] @relation("MissionUser")
  targetMissions   UserMission[] @relation("TargetUser")

  @@map("user")
}

model UserMission {
  id            Int              @id @default(autoincrement())
  mission       Mission?         @relation(fields: [missionId], references: [id])
  missionId     Int?
  missionUser   User?           @relation("MissionUser", fields: [missionUserId], references: [id])
  missionUserId Int?
  targetUser    User?           @relation("TargetUser", fields: [targetUserId], references: [id])
  targetUserId  Int?
  status        String?         @db.VarChar(10)
  createAt      DateTime        @db.DateTime(6)
  updateAt      DateTime        @db.DateTime(6)
  completeMissions CompleteMission[]

  @@map("user_mission")
}

model CompleteMission {
  id         Int         @id @default(autoincrement())
  mission    UserMission @relation(fields: [missionId], references: [id])
  missionId  Int
  photo      String?     @db.VarChar(255)
  review     String?     @db.Text
  createAt   DateTime    @db.DateTime(6)
  updateAt   DateTime    @db.DateTime(6)

  @@map("complete_mission")
}